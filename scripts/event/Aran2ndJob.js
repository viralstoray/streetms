/* * This file is part of the OdinMS Maple Story Server    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>                       Matthias Butz <matze@odinms.de>                       Jan Christian Meyer <vimes@odinms.de>    This program is free software: you can redistribute it and/or modify    it under the terms of the GNU Affero General Public License version 3    as published by the Free Software Foundation. You may not use, modify    or distribute this program under any other version of the    GNU Affero General Public License.    This program is distributed in the hope that it will be useful,    but WITHOUT ANY WARRANTY; without even the implied warranty of    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the    GNU Affero General Public License for more details.    You should have received a copy of the GNU Affero General Public License    along with this program.  If not, see <http://www.gnu.org/licenses/>. *//*	Author: Biscuit*/importPackage(Packages.world);var exitMap;function init() {    exitMap = em.getChannelServer().getMapFactory().getMap(140030000);    instanceId = 1;}function setup() {	var eim = em.newInstance("Aran2ndJob");	var time = 15 * (1000 * 60); // 15 mins.	em.schedule("timeOut", eim, time);	eim.startEventTimer(time);    return eim;}function playerEntry(eim, player) {	var map = em.getChannelServer().getMapFactory().getMap(108000700);	player.changeMap(map, map.getPortal("out00"));}function playerDead(eim, player) {}function playerRevive(eim, player) {}function playerDisconnected(eim, player) {    removePlayer(eim, player);}function leftParty(eim, player) {    playerExit(eim, player);}function disbandParty(eim) {}function playerExit(eim, player) {    eim.unregisterPlayer(player);    player.changeMap(exitMap, exitMap.getPortal("in00"));}function removePlayer(eim, player) {    eim.unregisterPlayer(player);    player.getMap().removePlayer(player);    player.changeMap(exitMap, exitMap.getPortal("in00"));}function clearPQ(eim) {}function allMonstersDead(eim) {}function cancelSchedule() {}function timeOut(eim, player) {    if (eim != null) {        if (eim.getPlayerCount() > 0) {            var pIter = eim.getPlayers().iterator();            while (pIter.hasNext())                playerExit(eim, pIter.next());        }        eim.dispose();    }}