/* * This file is part of the OdinMS Maple Story Server    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>                       Matthias Butz <matze@odinms.de>                       Jan Christian Meyer <vimes@odinms.de>    This program is free software: you can redistribute it and/or modify    it under the terms of the GNU Affero General Public License version 3    as published by the Free Software Foundation. You may not use, modify    or distribute this program under any other version of the    GNU Affero General Public License.    This program is distributed in the hope that it will be useful,    but WITHOUT ANY WARRANTY; without even the implied warranty of    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the    GNU Affero General Public License for more details.    You should have received a copy of the GNU Affero General Public License    along with this program.  If not, see <http://www.gnu.org/licenses/>. *//*	Author: Biscuit*/importPackage(Packages.world);// mapsvar exitMap;var lb1;var lb2;var lb3;var lb4;var lb5;var lb6;function init() {	lb1 = em.getChannelServer().getMapFactory().getMap(980000100);	lb2 = em.getChannelServer().getMapFactory().getMap(980000200);	lb3 = em.getChannelServer().getMapFactory().getMap(980000300);	lb4 = em.getChannelServer().getMapFactory().getMap(980000400);	lb5 = em.getChannelServer().getMapFactory().getMap(980000500);	lb6 = em.getChannelServer().getMapFactory().getMap(980000600);    exitMap = em.getChannelServer().getMapFactory().getMap(980000000);	em.setProperty("lobbyOpen1", "true");	em.setProperty("lobbyOpen2", "true");	em.setProperty("lobbyOpen3", "true");	em.setProperty("lobbyOpen4", "true");	em.setProperty("lobbyOpen5", "true");	em.setProperty("lobbyOpen6", "true");	em.setProperty("toLobby", 1);    instanceId = 1;}function setup() {	if (em.getInstance("monsterCarnivalPQLobby") == null) {		var eim = em.newInstance("monsterCarnivalPQLobby");	} else {		var eim = em.getInstance("monsterCarnivalPQLobby");	}	if (em.getProperty("lobbyOpen1") == "true") {		var lobbyTime = 3 * (1010 * 60); // 3 mins.		em.schedule("lobbyTimeOut", eim, lobbyTime);		eim.startEventTimer(lobbyTime);		em.schedule("messageInv", eim, 4000);	} else if (em.getProperty("lobbyOpen1") == "false") {		em.schedule("lobbyReadyTimeOut", eim, 12000);		em.schedule("showReady", eim, 1000);	}    return eim;}function playerEntry(eim, player) {    var map = this["lb" + em.getProperty("toLobby")];    player.changeMap(map, map.getPortal(0));}function playerDead(eim, player) {}function playerRevive(eim, player) {}function playerDisconnected(eim, player) {    removePlayer(eim, player);}function leftParty(eim, player) {    playerExit(eim, player);}function disbandParty(eim) {    var party = eim.getPlayers();    for (var i = 0; i < party.size(); i++) {        playerExit(eim, party.get(i));    }	em.setProperty("lobbyOpen" + em.getProperty("toLobby"), "true");    eim.dispose();}function playerExit(eim, player) {    eim.unregisterPlayer(player);    player.changeMap(exitMap, exitMap.getPortal(0));}function removePlayer(eim, player) {    eim.unregisterPlayer(player);    player.getMap().removePlayer(player);    player.changeMap(exitMap, exitMap.getPortal(0));}function clearPQ(eim) {    var party = eim.getPlayers();    for (var i = 0; i < party.size(); i++)        playerExit(eim, party.get(i));	em.setProperty("lobbyOpen" + em.getProperty("toLobby"), "true");    eim.dispose();}function allMonstersDead(eim) {}function cancelSchedule() {}function lobbyTimeOut(eim, player) {    if (eim != null) {        if (eim.getPlayerCount() > 0) {            var pIter = eim.getPlayers().iterator();            while (pIter.hasNext())                playerExit(eim, pIter.next());        }        eim.dispose();    }}function lobbyReadyTimeOut(eim, player) {	var pIter = eim.getPlayers().iterator();    while (pIter.hasNext())        playerExit(eim, pIter.next());	em.setProperty("lobbyOpen" + em.getProperty("toLobby"), "true");}function messageInv(eim) {	var pIter = eim.getPlayers().iterator();    while (pIter.hasNext())        pIter.next().dropMessage(6, "You will receive invitations from other parties in the next 3 minutes.");}function showReady(eim) {	var players = eim.getPlayers();	for (var i = 0; i < players.size(); i++) {		players.get(i).sendClock(11);		players.get(i).dropMessage(6, "The Monster Carnival will begin in 10 seconds!");	}}